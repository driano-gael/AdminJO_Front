/**
 * Composant AuthenticatedLayout - Layout principal prot√©g√© AdminJO
 *
 * @name AuthenticatedLayout
 * Ce composant layout fondamental orchestre la structure de page compl√®te pour toutes
 * les interfaces prot√©g√©es de l'application AdminJO des Jeux Olympiques 2024. Il combine
 * protection par authentification, navigation contextuelle, et architecture responsive
 * pour cr√©er un environnement s√©curis√© et coh√©rent destin√© aux administrateurs olympiques.
 * Con√ßu comme wrapper universel, il int√®gre AuthGuard pour s√©curit√©, AppHeader pour
 * navigation, surveillance session automatique, et container responsive pour une
 * exp√©rience utilisateur homog√®ne √† travers tous les modules de gestion des JO.
 *
 * ## Architecture layout et composition s√©curis√©e
 *
 * ### üõ°Protection authentification multicouches
 * - **AuthGuard wrapper** : Protection automatique toutes pages utilisant ce layout
 * - **Session monitoring** : useSessionExpiry() surveillance continue validit√© session
 * - **Token refresh** : Renouvellement automatique tokens via AuthGuard
 * - **Redirections s√©curis√©es** : LoginAdminForm si non authentifi√©
 * - **√âtat global** : Synchronisation avec AuthContext pour coh√©rence
 * - **Pas de bypass** : Impossible acc√©der contenu sans authentification valide
 * - **Security by design** : S√©curit√© int√©gr√©e architecture, pas optionnelle
 *
 * ### Structure layout hi√©rarchique
 * 1. **AuthGuard** : Couche s√©curit√© englobante (niveau 1)
 * 2. **Container principal** : bg-base-200 background coh√©rent (niveau 2)
 * 3. **AppHeader** : Navigation et titre contextuels (niveau 3)
 * 4. **Main content** : Zone contenu prot√©g√© children (niveau 4)
 * 5. **Session monitoring** : Hook surveillance invisible (transversal)
 *
 * ## Session monitoring et s√©curit√© continue
 *
 * ### Surveillance session automatique
 * - **useSessionExpiry hook** : Monitoring continu validit√© session
 * - **D√©tection expiration** : Identification automatique tokens expir√©s
 * - **SessionExpiredModal** : Modal automatique si session expir√©e
 * - **Recovery graceful** : Gestion propre expirations sans crash
 * - **Background monitoring** : Surveillance transparente pour utilisateur
 * - **Cleanup automatique** : Nettoyage ressources si session invalid√©e
 *
 * @param {Props} props - Configuration du layout authentifi√©
 * @param {ReactNode} props.children - Contenu page √† prot√©ger et afficher
 * @param {string} props.title - Titre page pour AppHeader et identification
 * @param {string} [props.backUrl] - URL page parent pour navigation retour optionnelle
 * @param {string} [props.backLabel] - Texte bouton retour personnalis√© optionnel
 *
 * @returns {JSX.Element} Layout complet avec protection auth et navigation
 *
 * @see {@link AuthGuard} - Composant protection authentification utilis√©
 * @see {@link AppHeader} - Composant navigation avec titre et breadcrumb
 * @see {@link useSessionExpiry} - Hook surveillance session continue
 *
 */

'use client';

import { ReactNode } from 'react';
import AuthGuard from '@/components/connexion/authGuard';
import AppHeader from '@/components/navigation/AppHeader';
import { useSessionExpiry } from '@/hooks/useSessionExpiry';

/**
 * Props pour le composant AuthenticatedLayout
 */
interface Props {
  children: ReactNode;
  title: string;
  backUrl?: string;
  backLabel?: string;
}

export function AuthenticatedLayout({
    children, 
    title, 
    backUrl, 
    backLabel 
}: Props) {
    useSessionExpiry();
    return (
        <AuthGuard>
            <div className="bg-base-200">
                <AppHeader 
                    title={title}
                    backUrl={backUrl}
                    backLabel={backLabel}
                />
                <main className="">
                {children}
                </main>
            </div>
        </AuthGuard>
    );
}
export default AuthenticatedLayout;
