/**
 * Composant AuthenticatedLayout - Layout principal prot√©g√© AdminJO
 *
 * Ce composant layout fondamental orchestre la structure de page compl√®te pour toutes
 * les interfaces prot√©g√©es de l'application AdminJO des Jeux Olympiques 2024. Il combine
 * protection par authentification, navigation contextuelle, et architecture responsive
 * pour cr√©er un environnement s√©curis√© et coh√©rent destin√© aux administrateurs olympiques.
 * Con√ßu comme wrapper universel, il int√®gre AuthGuard pour s√©curit√©, AppHeader pour
 * navigation, surveillance session automatique, et container responsive pour une
 * exp√©rience utilisateur homog√®ne √† travers tous les modules de gestion des JO.
 *
 * ## Architecture layout et composition s√©curis√©e
 *
 * ### üõ°Ô∏è Protection authentification multicouches
 * - **AuthGuard wrapper** : Protection automatique toutes pages utilisant ce layout
 * - **Session monitoring** : useSessionExpiry() surveillance continue validit√© session
 * - **Token refresh** : Renouvellement automatique tokens via AuthGuard
 * - **Redirections s√©curis√©es** : LoginAdminForm si non authentifi√©
 * - **√âtat global** : Synchronisation avec AuthContext pour coh√©rence
 * - **Pas de bypass** : Impossible acc√©der contenu sans authentification valide
 * - **Security by design** : S√©curit√© int√©gr√©e architecture, pas optionnelle
 *
 * ### üèóÔ∏è Structure layout hi√©rarchique
 * 1. **AuthGuard** : Couche s√©curit√© englobante (niveau 1)
 * 2. **Container principal** : bg-base-200 background coh√©rent (niveau 2)
 * 3. **AppHeader** : Navigation et titre contextuels (niveau 3)
 * 4. **Main content** : Zone contenu prot√©g√© children (niveau 4)
 * 5. **Session monitoring** : Hook surveillance invisible (transversal)
 *
 * ## Gestion navigation et contexte
 *
 * ### üß≠ Navigation contextuelle flexible
 * - **Title dynamique** : Titre page pass√© via props pour identification
 * - **Navigation retour** : backUrl et backLabel optionnels pour breadcrumb
 * - **AppHeader int√©gration** : Composant navigation centralis√© et r√©utilisable
 * - **Contexte pr√©serv√©** : Navigation sans perte √©tat authentification
 * - **Hi√©rarchie claire** : Breadcrumb visuel via props navigation
 * - **Responsive nav** : AppHeader adaptatif tous √©crans automatiquement
 * - **Accessibility** : Navigation accessible via AppHeader standards
 *
 * ### üì° Props interface et flexibilit√©
 * - **children** : ReactNode contenu page √† prot√©ger et afficher
 * - **title** : string titre page pour AppHeader et identification
 * - **backUrl** : string optionnel URL page parent pour navigation retour
 * - **backLabel** : string optionnel texte bouton retour personnalis√©
 * - **Props optionnelles** : backUrl/backLabel pour flexibilit√© navigation
 * - **Type safety** : Interface Props stricte avec ReactNode g√©n√©rique
 * - **Extensibilit√©** : Structure props facilement extensible futures options
 *
 * ## Session monitoring et s√©curit√© continue
 *
 * ### ‚è∞ Surveillance session automatique
 * - **useSessionExpiry hook** : Monitoring continu validit√© session
 * - **D√©tection expiration** : Identification automatique tokens expir√©s
 * - **SessionExpiredModal** : Modal automatique si session expir√©e
 * - **Recovery graceful** : Gestion propre expirations sans crash
 * - **Background monitoring** : Surveillance transparente pour utilisateur
 * - **Multi-tab sync** : Coh√©rence expiration entre onglets multiples
 * - **Cleanup automatique** : Nettoyage ressources si session invalid√©e
 *
 * ### üîê S√©curit√© int√©gr√©e architecture
 * - **Zero trust** : Aucun contenu accessible sans authentification
 * - **Defense in depth** : AuthGuard + session monitoring + token refresh
 * - **Fail secure** : √âchec vers LoginAdminForm, jamais exposition donn√©es
 * - **Audit trail** : Tra√ßabilit√© acc√®s via AuthContext et hooks
 * - **Memory protection** : Nettoyage automatique donn√©es sensibles
 * - **State isolation** : Isolation √©tat auth du contenu applicatif
 *
 * ## Design system et exp√©rience utilisateur
 *
 * ### üé® Design coh√©rent AdminJO
 * - **Background uniforme** : bg-base-200 couleur de fond syst√®me coh√©rente
 * - **Structure s√©mantique** : div container + main content pour SEO/accessibility
 * - **AppHeader integration** : Navigation standardis√©e toutes pages
 * - **Spacing harmonieux** : Pas de margins/paddings conflictuels
 * - **Z-index management** : Ordre superposition logique composants
 * - **Color system** : Respect palette couleurs AdminJO olympique
 * - **Typography** : Coh√©rence typographique via AppHeader titles
 *
 * ### üì± Responsive et adaptabilit√©
 * - **Mobile-first** : Layout adaptatif √©crans tactiles prioritaires
 * - **Container fluide** : S'adapte largeur viewport automatiquement
 * - **AppHeader responsive** : Navigation adapt√©e tous form factors
 * - **Content scaling** : Zone main s'ajuste contenu et √©cran
 * - **Touch-friendly** : Navigation tactile via AppHeader optimis√©e
 * - **Breakpoint harmony** : Coh√©rence breakpoints avec design system
 * - **Orientation support** : Fonctionnel portrait et paysage
 *
 * ## Performance et optimisations
 *
 * ### ‚ö° Optimisations architecture
 * - **Composant l√©ger** : Structure minimale sans logique complexe
 * - **Client component** : 'use client' pour hooks interactifs n√©cessaires
 * - **Props drilling minimal** : Interface props simple et directe
 * - **Hook efficient** : useSessionExpiry optimis√© pour surveillance
 * - **Re-renders contr√¥l√©s** : Pas de state local, d√©pendances externes stables
 * - **Memory efficient** : Pas de subscriptions ou timers internes
 * - **CSS static** : Classes Tailwind pr√©-compil√©es pour performance
 *
 * ### üéØ Candidats optimisation avanc√©e
 * - **React.memo** : M√©morisation si props title/navigation changent fr√©quemment
 * - **Lazy loading** : Chargement diff√©r√© AppHeader si tr√®s lourd
 * - **Suspense boundaries** : Loading √©tats pour chargement navigation
 * - **Error boundaries** : Isolation erreurs layout du contenu page
 * - **Bundle optimization** : Code splitting si layout devient complexe
 * - **Preload resources** : Pr√©chargement assets navigation critiques
 *
 * ## Int√©gration √©cosyst√®me AdminJO
 *
 * ### üîå Communication composants syst√®me
 * - **AuthGuard** : Composant s√©curit√© pour protection routes
 * - **AppHeader** : Navigation r√©utilisable avec titre et breadcrumb
 * - **useSessionExpiry** : Hook monitoring session pour s√©curit√© continue
 * - **AuthContext** : Context global authentification via AuthGuard
 * - **Design tokens** : bg-base-200 du design system AdminJO
 * - **Navigation patterns** : Int√©gration router Next.js via AppHeader
 *
 * ### üîÑ Workflow utilisation typique
 * 1. **Page request** : Utilisateur acc√®de route prot√©g√©e
 * 2. **Layout wrap** : AuthenticatedLayout entoure contenu page
 * 3. **Auth check** : AuthGuard v√©rifie authentification
 * 4. **Session monitor** : useSessionExpiry lance surveillance
 * 5. **Header render** : AppHeader affiche navigation avec titre
 * 6. **Content render** : children affich√© dans main si authentifi√©
 * 7. **Monitoring continue** : Session surveill√©e pendant utilisation
 *
 * ## Contexte m√©tier administration olympique
 *
 * ### üèÖ Sp√©cificit√©s environnement JO 2024
 * - **S√©curit√© renforc√©e** : Standards √©lev√©s pour √©v√©nements critiques
 * - **Multi-utilisateurs** : Layout partag√© √©quipes organisatrices diverses
 * - **Sessions longues** : Surveillance continue activit√© administrative
 * - **Navigation contextuelle** : Breadcrumbs essentiels hi√©rarchique complexe
 * - **Accessibilit√©** : Standards CIO pour inclusion organisateurs handicap√©s
 * - **Performance** : Fluidit√© cruciale pendant √©v√©nements temps r√©el
 * - **Audit compliance** : Tra√ßabilit√© acc√®s pour s√©curit√© olympique
 *
 * ### üìä Types pages utilisant ce layout
 * - **Dashboard principal** : Vue d'ensemble activit√©s administrateur
 * - **Gestion √©v√©nements** : CRUD √©v√©nements sportifs olympiques
 * - **Administration lieux** : Gestion infrastructure olympique
 * - **Gestion disciplines** : Configuration sports et √©preuves
 * - **R√©sultats temps r√©el** : Saisie scores pendant comp√©titions
 * - **Coordination m√©dias** : Gestion contenus et communications
 * - **Logistique JO** : Coordination op√©rationnelle √©v√©nements
 *
 * ## Patterns d√©veloppement et extensibilit√©
 *
 * ### üèóÔ∏è Architecture patterns appliqu√©s
 * - **Layout pattern** : Structure commune pages avec variations
 * - **HOC pattern** : Higher-Order Component pour fonctionnalit√©s transversales
 * - **Composition pattern** : Assemblage composants sp√©cialis√©s
 * - **Props drilling contr√¥l√©** : Interface minimale mais flexible
 * - **Security by default** : Protection int√©gr√©e, pas optionnelle
 * - **Single responsibility** : Focus layout, d√©l√©gation s√©curit√©/navigation
 *
 * ### üîß Extensibilit√© et configuration futures
 * - **Theme support** : Props theme pour variations couleurs
 * - **Sidebar integration** : Support navigation lat√©rale si n√©cessaire
 * - **Footer support** : Props footer pour informations persistantes
 * - **Notifications overlay** : Int√©gration syst√®me notifications global
 * - **Breadcrumb advanced** : Support breadcrumbs complexes multi-niveaux
 * - **Layout variants** : Props variant pour diff√©rentes structures
 * - **Custom headers** : Support headers sp√©cialis√©s selon contexte
 *
 * ## Accessibilit√© et standards
 *
 * ### ‚ôø Conformit√© accessibilit√©
 * - **Semantic HTML** : Structure main/div s√©mantique correcte
 * - **Skip links** : Navigation rapide contenu via AppHeader
 * - **Focus management** : Gestion focus lors transitions pages
 * - **Screen readers** : Structure logique pour synth√®se vocale
 * - **Keyboard navigation** : Navigation clavier compl√®te via AppHeader
 * - **ARIA landmarks** : Identification zones page pour technologies assistives
 * - **Contrast ratios** : bg-base-200 respecte ratios contraste
 *
 * ### üîß Am√©liorations accessibilit√© possibles
 * - **Skip to content** : Lien direct au contenu principal
 * - **ARIA labels** : Labels contextuels pour identification sections
 * - **Live regions** : Annonces changements √©tat pour screen readers
 * - **Focus restoration** : Restauration focus apr√®s navigations
 * - **High contrast** : Support modes contraste √©lev√©
 * - **Reduced motion** : Respect pr√©f√©rences animation utilisateur
 *
 * ## Gestion erreurs et robustesse
 *
 * ### üõ°Ô∏è Strat√©gies resilience
 * - **AuthGuard protection** : Gestion erreurs auth sans crash layout
 * - **Graceful degradation** : Fonctionnement partiel si composants √©chouent
 * - **Error boundaries** : Isolation erreurs enfants du layout
 * - **Fallback UI** : AppHeader minimale si erreur navigation
 * - **Session recovery** : R√©cup√©ration automatique sessions expir√©es
 * - **Network resilience** : Fonctionnement offline partiel
 *
 * ### üîÑ Recovery patterns
 * - **Auto-retry** : Nouvelles tentatives automatiques si √©checs temporaires
 * - **User feedback** : Messages erreur clairs via AppHeader
 * - **State consistency** : Coh√©rence √©tat m√™me cas d'erreur
 * - **Cleanup garantie** : Nettoyage ressources m√™me si erreurs
 * - **Audit logging** : Tra√ßabilit√© erreurs pour debugging
 *
 * ## Limitations et am√©liorations futures
 *
 * ### ‚ùå Limitations actuelles identifi√©es
 * - **Structure rigide** : Pas de variations layout selon contexte
 * - **No sidebar** : Pas de support navigation lat√©rale
 * - **No footer** : Pas de zone footer persistante
 * - **Basic breadcrumb** : Navigation retour simple seulement
 * - **No theming** : Couleurs/styles non configurables
 * - **No notifications** : Pas d'overlay notifications int√©gr√©
 * - **Fixed header** : AppHeader position non configurable
 *
 * ### üöÄ Am√©liorations prioritaires futures
 * - **Layout variants** : Props pour diff√©rentes structures (sidebar, etc.)
 * - **Theme system** : Support th√®mes sombre/clair AdminJO
 * - **Notification overlay** : Syst√®me toast notifications int√©gr√©
 * - **Advanced breadcrumb** : Navigation hi√©rarchique complexe
 * - **Performance monitoring** : M√©triques temps chargement layout
 * - **Offline support** : Fonctionnement hors-ligne avec cache
 * - **Progressive enhancement** : Am√©lioration progressive selon capabilities
 * - **Analytics integration** : Tracking usage patterns navigation
 * - **Custom hooks** : Hooks layout pour logique r√©utilisable
 * - **Micro-frontends** : Support architecture micro-frontends si √©volution
 *
 * ### üîß Am√©liorations techniques avanc√©es
 * - **Suspense integration** : Loading boundaries pour navigation async
 * - **Concurrent features** : Support React 18 concurrent rendering
 * - **Web Components** : Interop√©rabilit√© avec autres technologies
 * - **Service Worker** : Int√©gration PWA pour exp√©rience native
 * - **WebAssembly** : Optimisations performance critiques si n√©cessaire
 * - **Real-time sync** : WebSocket int√©gration pour donn√©es temps r√©el
 * - **Edge computing** : Optimisations edge pour latence r√©duite
 *
 * @param {Props} props - Configuration du layout authentifi√©
 * @param {ReactNode} props.children - Contenu page √† prot√©ger et afficher
 * @param {string} props.title - Titre page pour AppHeader et identification
 * @param {string} [props.backUrl] - URL page parent pour navigation retour optionnelle
 * @param {string} [props.backLabel] - Texte bouton retour personnalis√© optionnel
 *
 * @returns {JSX.Element} Layout complet avec protection auth et navigation
 *
 * @see {@link AuthGuard} - Composant protection authentification utilis√©
 * @see {@link AppHeader} - Composant navigation avec titre et breadcrumb
 * @see {@link useSessionExpiry} - Hook surveillance session continue
 *
 * @since 1.0.0
 * @version 1.0.0
 *
 * @example
 * ```tsx
 * // Layout basique avec titre seulement
 * <AuthenticatedLayout title="Dashboard Admin">
 *   <DashboardContent />
 * </AuthenticatedLayout>
 * ```
 *
 * @example
 * ```tsx
 * // Layout avec navigation retour
 * <AuthenticatedLayout
 *   title="Gestion √âv√©nements"
 *   backUrl="/dashboard"
 *   backLabel="‚Üê Retour Dashboard"
 * >
 *   <EventsManagement />
 * </AuthenticatedLayout>
 * ```
 *
 * @example
 * ```tsx
 * // Int√©gration page Next.js
 * export default function EventsPage() {
 *   return (
 *     <AuthenticatedLayout
 *       title="√âv√©nements Olympiques"
 *       backUrl="/dashboard"
 *       backLabel="‚Üê Dashboard"
 *     >
 *       <EventsContent />
 *     </AuthenticatedLayout>
 *   );
 * }
 * ```
 */

'use client';

import { ReactNode } from 'react';
import AuthGuard from '@/components/connexion/authGuard';
import AppHeader from '@/components/navigation/AppHeader';
import { useSessionExpiry } from '@/hooks/useSessionExpiry';

/**
 * Props pour le composant AuthenticatedLayout
 */
interface Props {
  children: ReactNode;
  title: string;
  backUrl?: string;
  backLabel?: string;
}

export default function AuthenticatedLayout({ 
    children, 
    title, 
    backUrl, 
    backLabel 
}: Props) {
    useSessionExpiry();
    return (
        <AuthGuard>
            <div className="bg-base-200">
                <AppHeader 
                    title={title}
                    backUrl={backUrl}
                    backLabel={backLabel}
                />
                <main className="">
                {children}
                </main>
            </div>
        </AuthGuard>
    );
}
