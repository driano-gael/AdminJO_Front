/**
 * Composant SearchAndFilters - Barre de recherche des lieux olympiques AdminJO
 *
 * Ce composant fournit l'interface de recherche pour filtrer les lieux olympiques
 * des Jeux Olympiques 2024. Il offre une barre de recherche en temps r√©el permettant
 * aux administrateurs de localiser rapidement des √©tablissements sportifs sp√©cifiques
 * parmi la liste compl√®te des lieux olympiques (Stade de France, Centre Aquatique,
 * Arena Bercy, etc.). Con√ßu pour l'efficacit√© op√©rationnelle, il suit les standards
 * AdminJO avec feedback visuel imm√©diat, √©tats de focus optimis√©s, et int√©gration
 * harmonieuse dans l'√©cosyst√®me de gestion des infrastructures olympiques.
 *
 * ## Fonctionnalit√©s de recherche r√©ellement impl√©ment√©es
 *
 * ### üîç Barre de recherche temps r√©el lieux olympiques
 * - **Input principal** : Champ texte avec placeholder "Rechercher un lieu..."
 * - **Recherche instantan√©e** : onChange d√©clenche onSearch(e.target.value)
 * - **Valeur contr√¥l√©e** : value={searchTerm} pour synchronisation √©tat
 * - **Pas de debouncing** : Filtrage imm√©diat sans d√©lai optimisation
 * - **Largeur adapt√©e** : max-w-md pour taille optimale desktop/mobile
 * - **Responsive design** : w-full avec container flexible
 * - **Terminologie cibl√©e** : Placeholder sp√©cialis√© contexte lieux
 *
 * ### üéØ √âtats de focus et interaction utilisateur
 * - **Focus ring** : focus:ring-2 focus:ring-blue-500 couleur AdminJO
 * - **Outline d√©sactiv√©** : focus:outline-none pour style customis√©
 * - **Border standard** : border-gray-300 √©tat normal
 * - **Transition focus** : Changement visuel imm√©diat sur focus
 * - **Zone de clic** : px-4 py-2 pour confort interaction
 * - **Contraste texte** : text-black pour lisibilit√© optimale
 * - **Accessibilit√©** : Navigation clavier native input
 *
 * ### üìã Layout et pr√©sentation container
 * - **Container principal** : bg-white rounded-lg shadow-md √©l√©vation
 * - **Padding g√©n√©reux** : p-6 pour respiration composant
 * - **Espacement externe** : mb-8 s√©paration avec composants suivants
 * - **Container input** : flex-1 max-w-md limitation largeur
 * - **Design coh√©rent** : Style align√© autres cards AdminJO
 * - **√âl√©vation subtile** : shadow-md pour d√©tachement visuel
 * - **Coins arrondis** : rounded-md harmonisation design system
 *
 * ## Architecture et int√©gration syst√®me lieux
 *
 * ### üîÑ Gestion d'√©tat contr√¥l√©
 * - **Props descendantes** : searchTerm depuis composant parent
 * - **Callbacks ascendants** : onSearch vers LieuxManagement
 * - **Synchronisation** : Valeur input synchronis√©e avec √©tat global
 * - **R√©activit√©** : Re-render automatique sur changement searchTerm
 * - **Pas d'√©tat local** : Composant enti√®rement contr√¥l√© parent
 * - **Performance** : onChange directe sans state interm√©diaire
 * - **Consistance** : Source de v√©rit√© unique dans parent
 *
 * ### üì° Communication parent-enfant optimis√©e
 * - **Interface stricte** : SearchAndFiltersProps avec types TypeScript
 * - **Callback simple** : onSearch(query: string) signature claire
 * - **Transmission imm√©diate** : Pas de buffer ou d√©lai traitement
 * - **D√©l√©gation logique** : Filtrage g√©r√© par composant parent
 * - **Isolation responsabilit√©s** : UI pure sans logique m√©tier
 * - **R√©utilisabilit√©** : Pattern g√©n√©rique adaptable autres modules
 * - **Maintenance** : Logique centralis√©e facilite √©volutions
 *
 * ## Exp√©rience utilisateur et ergonomie lieux
 *
 * ### üé® Design et feedback visuel
 * - **Placeholder contextuel** : "Rechercher un lieu..." sp√©cialis√©
 * - **√âtats visuels clairs** : Normal, focus, disabled bien d√©finis
 * - **Coh√©rence chromatique** : Couleurs align√©es theme AdminJO
 * - **√âl√©vation appropri√©e** : shadow-md sans surcharge visuelle
 * - **Espacement harmonieux** : Padding et margins √©quilibr√©s
 * - **Typography lisible** : text-black contraste optimal
 * - **Border radius** : Coins arrondis pour douceur interface
 *
 * ### ‚ö° Performance et r√©activit√© recherche
 * - **R√©ponse imm√©diate** : onChange sans debouncing
 * - **Pas de loading** : Filtrage c√¥t√© client instantan√©
 * - **Minimal re-renders** : Props stables entre updates
 * - **L√©g√®ret√© DOM** : Structure HTML minimale
 * - **CSS optimis√©** : Classes Tailwind pr√©-compil√©es
 * - **Input natif** : Performance navigateur maximale
 * - **Memory efficient** : Pas de state ou refs internes
 *
 * ## Accessibilit√© et standards d'usage
 *
 * ### ‚ôø Conformit√© accessibilit√© native
 * - **S√©mantique HTML** : Input type="text" natif accessible
 * - **Placeholder descriptif** : Information contextuelle claire
 * - **Focus visible** : Ring de focus bien contrast√©
 * - **Navigation clavier** : Tab/Shift+Tab support natif
 * - **Screen readers** : Placeholder lu par synth√®se vocale
 * - **Contraste suffisant** : text-black sur bg-white optimal
 * - **Zone interaction** : Padding suffisant pour tous usages
 *
 * ### üîß Am√©liorations accessibilit√© possibles
 * - **Label explicite** : <label> associ√© pour description
 * - **ARIA enhancements** : aria-label contextuel d√©taill√©
 * - **Search role** : role="search" pour identification s√©mantique
 * - **Live region** : Annonce r√©sultats pour screen readers
 * - **Keyboard shortcuts** : Raccourcis focus rapide (Ctrl+F)
 * - **Clear button** : Bouton effacement accessible
 * - **Status announcements** : Feedback audio nombre r√©sultats
 *
 * ## Responsive design et adaptabilit√©
 *
 * ### üì± Adaptation multi-supports
 * - **Container flexible** : flex-1 adaptation largeur parent
 * - **Largeur maximale** : max-w-md √©vite extension excessive
 * - **Input responsive** : w-full utilise espace disponible
 * - **Padding adaptatif** : p-6 appropri√© desktop et mobile
 * - **Touch-friendly** : py-2 hauteur suffisante interaction tactile
 * - **Margin responsive** : mb-8 espacement coh√©rent √©crans
 * - **Font-size** : Taille par d√©faut adapt√©e tous supports
 *
 * ### üíª Optimisation exp√©rience desktop
 * - **Largeur contr√¥l√©e** : max-w-md √©vite barre trop √©tendue
 * - **Hover states** : Potentiel am√©lioration hover border
 * - **Focus management** : Ring visible pour navigation clavier
 * - **Cursor appropriate** : text cursor dans champ input
 * - **Selection behavior** : S√©lection texte native optimis√©e
 * - **Copy/paste** : Support clipboard navigateur standard
 *
 * ## Contexte m√©tier lieux olympiques sp√©cialis√©
 *
 * ### üèÖ Sp√©cificit√©s domaine infrastructure olympique
 * - **Terminologie cibl√©e** : "lieu" pour √©tablissements sportifs
 * - **Placeholder contextuel** : Recherche sp√©cialis√©e lieux olympiques
 * - **Cas d'usage** : Localisation rapide parmi √©tablissements JO
 * - **Exemples recherche** : "Stade", "Centre", "Arena", "Aquatique"
 * - **Efficacit√© op√©rationnelle** : Tool administrateurs organisateurs
 * - **Volume donn√©es** : Optimis√© pour catalogue lieux JO 2024
 * - **Pr√©cision recherche** : Filtrage par nom √©tablissement
 *
 * ### üìä Types recherches support√©es actuellement
 * - **Recherche nom** : Filtrage par nom lieu (impl√©mentation parent)
 * - **Sensibilit√© casse** : D√©pend impl√©mentation parent
 * - **Recherche partielle** : Matching sous-cha√Ænes probablement
 * - **Caract√®res sp√©ciaux** : Support accent selon backend
 * - **Recherche vide** : Affichage tous lieux si term vide
 * - **Temps r√©el** : R√©sultats instantan√©s pendant frappe
 *
 * ## Limitations actuelles et am√©liorations futures
 *
 * ### ‚ùå Fonctionnalit√©s manquantes actuellement
 * - **Filtres avanc√©s** : Pas de crit√®res suppl√©mentaires (type, capacit√©)
 * - **Suggestions** : Pas d'autocompl√©tion pendant frappe
 * - **Recherche floue** : Pas de tol√©rance erreurs frappe
 * - **Raccourcis clavier** : Pas de shortcuts focus rapide
 * - **Historique** : Pas de m√©morisation recherches r√©centes
 * - **Clear button** : Pas de bouton effacement visible
 * - **Advanced search** : Pas de crit√®res multiples combin√©s
 *
 * ### üöÄ √âvolutions possibles module recherche lieux
 * - **Filtres contextuels** : Type lieu (stade/centre/arena)
 * - **Autocompl√©tion** : Suggestions bas√©es noms existants
 * - **Recherche g√©ographique** : Filtrage par zone g√©ographique
 * - **Capacit√© filtres** : Recherche par jauge √©tablissement
 * - **Statut filters** : Disponible/maintenance/construction
 * - **Favoris** : Marquage lieux consult√©s fr√©quemment
 * - **Export recherche** : Sauvegarde r√©sultats filtrage
 * - **Search analytics** : Statistiques termes recherch√©s
 * - **Voice search** : Recherche vocale pour accessibilit√©
 * - **QR code scan** : Recherche par scan code lieu physique
 *
 * ### üîß Am√©liorations techniques UX
 * - **Debouncing intelligent** : Optimisation performance grandes listes
 * - **Loading states** : Indicateur pendant recherche lente
 * - **Error handling** : Gestion √©chec recherche r√©seau
 * - **Cache search** : Mise en cache r√©sultats fr√©quents
 * - **Infinite scroll** : Pagination r√©sultats recherche
 * - **Highlighting** : Surlignage termes dans r√©sultats
 * - **Search operators** : AND/OR/NOT pour recherches complexes
 * - **RegEx support** : Patterns avanc√©s pour power users
 *
 * ## Int√©gration √©cosyst√®me AdminJO
 *
 * ### üîó Position dans architecture lieux
 * - **Parent direct** : LieuxManagement orchestrateur principal
 * - **Siblings** : LieuxTable, LieuxHeader composants fr√®res
 * - **Position layout** : Entre header et tableau pour UX logique
 * - **Style coh√©rent** : bg-white shadow-md align√© autres cards
 * - **Espacement** : mb-8 s√©paration harmonieuse composants
 * - **Integration fluide** : Transition visuelle naturelle
 *
 * ### üì± R√©utilisabilit√© cross-modules
 * - **Pattern g√©n√©rique** : Adaptable disciplines, √©preuves, √©v√©nements
 * - **Props interface** : Contrat r√©utilisable autres contextes
 * - **Style modulaire** : Classes Tailwind transposables
 * - **Logic agnostic** : Pas de logique sp√©cifique lieux hardcod√©e
 * - **Customization** : Placeholder modifiable selon contexte
 * - **Maintenance centralis√©e** : √âvolutions b√©n√©ficient tous modules
 *
 * @param {SearchAndFiltersProps} props - Propri√©t√©s composant recherche lieux
 * @param {string} props.searchTerm - Terme recherche actuel synchronis√©
 * @param {function} props.onSearch - Callback changement terme recherche
 *
 * @returns {JSX.Element} Interface recherche lieux olympiques temps r√©el
 *
 * @see {@link LieuxManagement} - Composant parent orchestrateur
 * @see {@link LieuxTable} - Composant tableau utilisant filtrage
 *
 * @since 1.0.0
 * @version 1.0.0
 *
 * @example
 * ```tsx
 * <SearchAndFilters
 *   searchTerm={currentSearchTerm}
 *   onSearch={(term) => setSearchTerm(term)}
 * />
 * ```
 *
 * @example
 * ```tsx
 * // Int√©gration avec hook gestion lieux
 * const { searchTerm, handleSearch } = useLieuxManagement();
 *
 * <SearchAndFilters
 *   searchTerm={searchTerm}
 *   onSearch={handleSearch}
 * />
 * ```
 */
interface SearchAndFiltersProps {
  searchTerm: string;
  onSearch: (query: string) => void;
}

export default function SearchAndFilters({ searchTerm, onSearch }: SearchAndFiltersProps) {
  return (
    <div className="bg-white rounded-lg shadow-md p-6 mb-8">
      <div className="flex-1 max-w-md">
        <input
          type="text"
          placeholder="Rechercher un lieu..."
          value={searchTerm}
          onChange={(e) => onSearch(e.target.value)}
          className="w-full px-4 py-2 border border-gray-300 text-black rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
        />
      </div>
    </div>
  );
}
