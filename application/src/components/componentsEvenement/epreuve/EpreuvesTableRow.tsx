import { Epreuve } from '@/types/sportEvenement/epreuve';
import Image from "next/image";
import {JSX} from "react";

interface Props {
  epreuve: Epreuve;
  onDelete: (id: number) => void;
  onEdit: (epreuve: Epreuve) => void;
}

/**
 * Composant EpreuvesTableRow - Ligne de tableau pour √©preuve sportive olympique AdminJO
 *
 * @name EpreuvesTableRow
 *
 * Ce composant repr√©sente une ligne individuelle dans le tableau des √©preuves sportives
 * olympiques. Il affiche les informations essentielles d'une √©preuve (nom et discipline
 * associ√©e) avec iconographie sp√©cialis√©e et fournit les actions CRUD directes via
 * boutons int√©gr√©s. Con√ßu pour l'interface d'administration des Jeux Olympiques 2024,
 * il suit les standards de design AdminJO avec states hover interactifs et gestion
 * optimis√©e des relations √©preuves ‚Üî disciplines.
 *
 * ## Donn√©es affich√©es r√©ellement impl√©ment√©es
 *
 * ### Informations √©preuve principale
 * - **Libell√© √©preuve** : `epreuve.libelle`
 * - **Nom complet** : D√©signation officielle √©preuve (ex: "100m nage libre hommes")
 *
 * ### Informations discipline associ√©e avec iconographie
 * - **Nom discipline** : `epreuve.discipline.nom`
 * - **Ic√¥ne discipline** : `epreuve.discipline.icone` via composant Next.js Image
 * - **Gestion conditionnelle** : Affichage ic√¥ne seulement si disponible
 * - **Dimensions ic√¥ne** : 20x20px optimis√©es pour lisibilit√© ligne tableau
 *
 * ## Actions utilisateur CRUD int√©gr√©es
 *
 * ### Action de modification √©preuve
 * - **Bouton "Modifier"** : D√©clenche √©dition √©preuve compl√®te
 * - **Callback** : `onEdit(epreuve)` avec objet √©preuve complet
 *
 * ### üóëAction de suppression √©preuve
 * - **Bouton "Supprimer"** : D√©clenche suppression √©preuve
 * - **Callback** : `onDelete(epreuve.id)` avec ID num√©rique √©preuve
 * - **Confirmation** : Gestion confirmations dans composants parents
 * - **S√©curit√©** : Transmission ID uniquement pour limitation exposition
 *
 * ## Sp√©cificit√©s √©preuves olympiques
 *
 * ### Types de donn√©es √©preuve g√©r√©es
 * - **Libell√©** : string - Nom complet √©preuve officiel
 * - **ID** : number - Identifiant unique √©preuve
 * - **Discipline** : objet - R√©f√©rence discipline parente
 * - **Relations** : discipline.nom, discipline.icone
 * - **Structure** : Type Epreuve import√© depuis types/sportEvenement
 * - **Validation** : Types TypeScript strictes pour s√©curit√©
 *
 * ## S√©curit√© et validation
 *
 * ### Aspects s√©curitaires
 * - **Validation props** : Interface TypeScript stricte
 * - **Sanitisation** : Affichage s√©curis√© donn√©es textuelles
 * - **ID transmission** : Seul ID transmis pour suppression
 * - **XSS prevention** : React √©chappe automatiquement contenu
 * - **Image sources** : URLs ic√¥nes valid√©es c√¥t√© serveur
 * - **Type safety** : Interfaces Props et Epreuve strictes
 *
 * ### Validation des donn√©es affich√©es
 * - **Libell√© √©preuve** : Affichage string avec √©chappement auto
 * - **Nom discipline** : Propri√©t√© imbriqu√©e s√©curis√©e
 * - **Ic√¥ne discipline** : Conditional rendering √©vite erreurs null
 * - **Actions callbacks** : Validation types param√®tres
 * - **Coh√©rence** : Structure donn√©es garantie par types TS
 *
 * @param {Props} props - Propri√©t√©s du composant
 * @param {Epreuve} props.epreuve - Objet √©preuve avec discipline associ√©e √† afficher
 * @param {function} props.onDelete - Callback suppression avec ID √©preuve
 * @param {function} props.onEdit - Callback √©dition avec objet √©preuve complet
 *
 * @returns {JSX.Element} Ligne de tableau interactive avec donn√©es √©preuve et actions
 *
 * @see {@link EpreuvesTable} - Tableau parent contenant les lignes
 * @see {@link Epreuve} - Interface TypeScript de l'objet √©preuve
 * @see {@link Image} - Composant Next.js pour optimisation images
 *
 */
export function EpreuvesTableRow({ epreuve, onDelete, onEdit }: Props): JSX.Element {
  return (
    <tr className="hover:bg-gray-50">
      <td className="px-6 py-4 whitespace-nowrap">
        <div className="text-sm font-medium text-gray-900">{epreuve.libelle}</div>
      </td>
      <td className="px-6 py-4 whitespace-nowrap">
        <div className="flex items-center gap-2">
          <div className="text-sm text-gray-500">{epreuve.discipline.nom}</div>
          {epreuve.discipline.icone && <Image src={epreuve.discipline.icone} alt={"icone"} width={20} height={20}/>}
          </div>
      </td>
      <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
        <button 
          onClick={() => onEdit(epreuve)}
          className="text-blue-600 hover:text-blue-900 mr-3"
        >
          Modifier
        </button>
        <button 
          onClick={() => onDelete(epreuve.id)}
          className="text-red-600 hover:text-red-900"
        >
          Supprimer
        </button>
      </td>
    </tr>
  );
}
export default EpreuvesTableRow;
