/**
 * Composant Breadcrumb - Navigation fil d'Ariane hi√©rarchique AdminJO
 *
 * Ce composant navigation sp√©cialis√© fournit une interface fil d'Ariane (breadcrumb)
 * sophistiqu√©e pour la navigation hi√©rarchique dans l'application AdminJO des Jeux
 * Olympiques 2024. Il permet aux administrateurs de visualiser leur position dans
 * l'arborescence applicative et de naviguer rapidement vers les niveaux parents.
 * Con√ßu pour les workflows complexes olympiques, il int√®gre liens interactifs,
 * s√©parateurs visuels, √©tat page courante, et responsive design pour une exp√©rience
 * navigation contextuelle optimale dans l'√©cosyst√®me de gestion des √©v√©nements
 * sportifs et de l'infrastructure des Jeux Olympiques 2024.
 *
 * ## Architecture navigation hi√©rarchique
 *
 * ### üó∫Ô∏è Structure fil d'Ariane intelligent
 * - **Items array** : BreadcrumbItem[] avec label et href optionnel
 * - **Navigation cliquable** : Links actifs pour items avec href fourni
 * - **Page courante** : Item sans href affich√© comme texte statique
 * - **S√©parateurs visuels** : Fl√®ches ‚Üí entre chaque niveau hi√©rarchie
 * - **Conditional links** : Link Next.js ou span selon pr√©sence href
 * - **Index tracking** : S√©parateur seulement apr√®s premier item
 * - **Semantic nav** : <nav> tag pour structure navigation accessible
 *
 * ### üìç Gestion √©tat page courante vs navigation
 * - **Link interactif** : item.href pr√©sent ‚Üí Link Next.js avec hover effects
 * - **Texte statique** : item.href absent ‚Üí span avec emphase visuelle
 * - **Styling diff√©rentiel** : hover:text-blue-600 pour liens, text-gray-900 font-medium pour courant
 * - **Visual hierarchy** : Page courante mise en valeur vs niveaux parents
 * - **Click feedback** : Hover states seulement sur √©l√©ments navigables
 * - **Accessibility** : Distinction claire √©l√©ments interactifs vs informatifs
 * - **SEO friendly** : Links avec href pour indexation navigation
 *
 * ### üé® Design et pr√©sentation visuelle
 * - **Spacing external** : mb-8 s√©paration avec contenu page
 * - **Layout horizontal** : flex items-center space-x-2 pour alignment
 * - **Typography** : text-sm pour discr√©tion, text-gray-600 base
 * - **Separators** : ‚Üí fl√®ches Unicode pour direction navigation
 * - **Color system** : gray-600 base, blue-600 hover, gray-900 current
 * - **Container padding** : Pas de padding interne, g√©r√© par parent
 * - **Responsive text** : text-sm adapt√© lecture tous √©crans
 *
 * ## Interface donn√©es et configuration
 *
 * ### üìä Structure BreadcrumbItem
 * - **label** : string texte affich√© pour niveau navigation
 * - **href** : string optionnel URL pour navigation cliquable
 * - **Flexibilit√©** : href undefined = page courante non-cliquable
 * - **Type safety** : Interface stricte TypeScript pour validation
 * - **Extensibilit√©** : Structure facilement extensible (icon, id, etc.)
 * - **Simplicit√©** : Interface minimale pour usage direct
 *
 * ### üîß Props configuration breadcrumb
 * - **items** : BreadcrumbItem[] array complet chemin navigation
 * - **Required prop** : items obligatoire pour fonctionnement breadcrumb
 * - **Empty handling** : Affichage vide si items array vide
 * - **Dynamic length** : Support chemins navigation longueur variable
 * - **Order preservation** : Ordre items respect√© pour hi√©rarchie logique
 * - **Immutable** : Props non mut√©es par composant
 *
 * ## Responsive design et adaptabilit√©
 *
 * ### üì± Adaptation √©crans et d√©bordement
 * - **Horizontal scroll** : Layout flex permet scroll naturel si d√©bordement
 * - **Text wrapping** : Pas de wrap, pr√©servation layout horizontal
 * - **Mobile friendly** : text-sm lisible √©crans tactiles
 * - **Touch targets** : Links dimensionn√©s interaction tactile
 * - **Compact display** : space-x-2 espacement optimal mobile/desktop
 * - **Truncation** : Pas de truncation automatique, gestion parent si n√©cessaire
 * - **Overflow strategy** : D√©bordement horizontal g√©r√© container parent
 *
 * ### üéØ Performance et optimisations
 * - **Static rendering** : Pas de state ou effects, rendu statique pur
 * - **Next.js Links** : Prefetching automatique pour navigation rapide
 * - **CSS static** : Classes Tailwind pr√©-compil√©es pour performance
 * - **Minimal DOM** : Structure HTML l√©g√®re avec √©l√©ments essentiels
 * - **No JavaScript** : Fonctionnement sans JS via liens natifs
 * - **Memory efficient** : Pas de subscriptions ou timers
 * - **Bundle light** : Code minimal impact taille bundle
 *
 * ## Accessibilit√© et navigation
 *
 * ### ‚ôø Standards accessibilit√© navigation
 * - **Semantic nav** : <nav> tag pour identification navigation
 * - **Link semantics** : Links Next.js pour navigation accessible
 * - **Visual hierarchy** : Contraste couleurs pour diff√©renciation niveaux
 * - **Keyboard navigation** : Tab navigation naturelle entre links
 * - **Screen readers** : Structure logique pour synth√®se vocale
 * - **Focus indicators** : Focus rings natifs Links pour navigation clavier
 * - **ARIA implicit** : S√©mantique native suffisante pour breadcrumb basique
 *
 * ### üîß Am√©liorations accessibilit√© possibles
 * - **ARIA breadcrumb** : role="navigation" aria-label="Breadcrumb"
 * - **Current page** : aria-current="page" sur item actuel
 * - **Skip links** : Navigation rapide fin breadcrumb
 * - **ARIA separators** : aria-hidden="true" sur s√©parateurs d√©coratifs
 * - **Screen reader** : Instructions navigation pour utilisateurs non-voyants
 * - **High contrast** : Modes contraste √©lev√© support
 * - **Reduced motion** : Pas d'animations, d√©j√† optimal
 *
 * ## Int√©gration √©cosyst√®me AdminJO
 *
 * ### üîå Utilisation dans templates et layouts
 * - **PageTemplate** : Utilis√© via props breadcrumbs optionnelles
 * - **Dynamic generation** : Items g√©n√©r√©s par pages selon context
 * - **Route integration** : Hrefs correspondent routes Next.js
 * - **Hierarchical data** : Reflects structure donn√©es m√©tier olympique
 * - **Context preservation** : Navigation pr√©serve contexte applicatif
 * - **Layout harmony** : S'int√®gre layouts AuthenticatedLayout/PageTemplate
 *
 * ### üîÑ Patterns usage typiques AdminJO
 * - **Dashboard ‚Üí Module** : ["Dashboard", "√âv√©nements"]
 * - **Module ‚Üí Detail** : ["Dashboard", "√âv√©nements", "Football Masculin"]
 * - **Nested workflows** : ["Dashboard", "Lieux", "Stade France", "Configuration"]
 * - **Admin hierarchy** : Reflect structure organisationnelle JO
 * - **Context switching** : Navigation rapide entre domaines m√©tier
 * - **User orientation** : Indication position dans workflows complexes
 *
 * ## Contexte m√©tier olympique JO 2024
 *
 * ### üèÖ Sp√©cificit√©s navigation administrative olympique
 * - **Hi√©rarchies complexes** : √âv√©nements ‚Üí Disciplines ‚Üí √âpreuves ‚Üí D√©tails
 * - **Multi-domain** : Navigation entre lieux, √©v√©nements, r√©sultats, m√©dias
 * - **Operational context** : Orientation rapide pendant √©v√©nements temps r√©el
 * - **Team coordination** : Navigation claire pour √©quipes multiples
 * - **Audit trails** : Chemins navigation tra√ßables pour compliance
 * - **Professional UI** : Interface coh√©rente standards organisateurs JO
 * - **Efficiency focus** : R√©duction clics navigation workflows fr√©quents
 *
 * ### üìä Exemples concrets usage JO
 * - **Event management** : Dashboard ‚Üí √âv√©nements ‚Üí Natation ‚Üí 100m Libre
 * - **Venue admin** : Dashboard ‚Üí Lieux ‚Üí Centre Aquatique ‚Üí Capacit√©s
 * - **Results workflow** : Dashboard ‚Üí R√©sultats ‚Üí Athl√©tisme ‚Üí Marathon ‚Üí Saisie
 * - **Media coordination** : Dashboard ‚Üí M√©dias ‚Üí Photos ‚Üí C√©r√©monie ‚Üí Upload
 * - **Logistics ops** : Dashboard ‚Üí Logistique ‚Üí Transport ‚Üí Navettes ‚Üí Planning
 * - **Technical setup** : Dashboard ‚Üí Technique ‚Üí Chronom√©trage ‚Üí Piscine ‚Üí Config
 *
 * ## Patterns d√©veloppement et extensibilit√©
 *
 * ### üèóÔ∏è Architecture patterns appliqu√©s
 * - **Presentation component** : Focus affichage, pas de logique m√©tier
 * - **Data-driven rendering** : Rendu bas√© uniquement sur props items
 * - **Conditional navigation** : Links vs texte selon pr√©sence href
 * - **Immutable props** : Pas de mutations donn√©es entr√©e
 * - **Stateless design** : Pas d'√©tat local pour simplicit√© maximale
 * - **Separation of concerns** : Navigation UI s√©par√©e de logique routing
 *
 * ### üîß Extensibilit√© futures possibles
 * - **Icon support** : Props icon pour chaque BreadcrumbItem
 * - **Custom separators** : Props separator pour personnalisation
 * - **Truncation options** : Props maxItems pour limitation longueur
 * - **Styling variants** : Props variant pour diff√©rents styles
 * - **Animation support** : Micro-animations transitions navigation
 * - **Dropdown overflow** : Menu d√©roulant si trop d'items
 * - **Mobile adaptation** : Comportement sp√©cifique mobile (collapse, etc.)
 *
 * ## Performance et optimisations avanc√©es
 *
 * ### ‚ö° Optimisations actuelles
 * - **Pure component** : Rendu d√©terministe bas√© props uniquement
 * - **Next.js prefetching** : Links pr√©charg√©s pour navigation rapide
 * - **Static CSS** : Classes Tailwind compil√©es statiquement
 * - **Minimal JavaScript** : Aucune logique JS c√¥t√© client
 * - **SEO optimized** : Links crawlables pour indexation
 * - **Memory efficient** : Aucune allocation m√©moire dynamique
 *
 * ### üéØ Candidats optimisation avanc√©e
 * - **React.memo** : M√©morisation si items changent rarement
 * - **Virtual scrolling** : Pour breadcrumbs tr√®s longs (edge case)
 * - **Route prefetching** : Prefetch intelligent bas√© usage patterns
 * - **Bundle optimization** : Tree shaking si fonctionnalit√©s √©tendues
 * - **CSS optimization** : Purge classes inutilis√©es
 * - **Accessibility cache** : Cache calculs ARIA si complexifi√©s
 *
 * ## Limitations et am√©liorations futures
 *
 * ### ‚ùå Limitations actuelles identifi√©es
 * - **No truncation** : Pas de gestion d√©bordement automatique
 * - **Fixed separators** : S√©parateurs ‚Üí non configurables
 * - **No icons** : Pas de support ic√¥nes dans items
 * - **Basic styling** : Un seul style, pas de variants
 * - **No tooltips** : Pas d'info-bulles items tronqu√©s
 * - **Static structure** : Pas d'adaptations dynamiques selon contexte
 * - **No analytics** : Pas de tracking clics navigation
 *
 * ### üöÄ Am√©liorations prioritaires futures
 * - **Smart truncation** : Ellipsis middle items si d√©bordement
 * - **Icon integration** : Support ic√¥nes contextuelles par item
 * - **Mobile optimization** : Comportement adaptatif √©crans √©troits
 * - **Tooltip system** : Info-bulles pour items tronqu√©s ou contexte
 * - **Animation library** : Transitions fluides changements breadcrumb
 * - **Customization props** : Separateurs, styles, comportements configurables
 * - **Analytics integration** : M√©triques usage patterns navigation
 * - **Performance monitoring** : Mesure impact rendu breadcrumbs longs
 * - **Accessibility++** : ARIA live regions pour annonces navigation
 * - **Theme integration** : Support th√®mes sombre/clair AdminJO
 *
 * ### üîß Am√©liorations techniques avanc√©es
 * - **Server components** : Migration React Server Components si b√©n√©fique
 * - **Edge optimization** : Optimisations edge computing navigation
 * - **Intersection observer** : Lazy loading items non-visibles (tr√®s longs)
 * - **Web Workers** : Traitement breadcrumbs complexes arri√®re-plan
 * - **Cache strategies** : Mise en cache intelligent structures navigation
 * - **Real-time sync** : Synchronisation breadcrumbs multi-onglets
 * - **Progressive enhancement** : Fallback sans JavaScript robuste
 * - **Security hardening** : Validation URLs navigation pour s√©curit√©
 *
 * @param {BreadcrumbProps} props - Configuration du breadcrumb navigation
 * @param {BreadcrumbItem[]} props.items - Array des √©l√©ments de navigation hi√©rarchique
 *
 * @returns {JSX.Element} Navigation breadcrumb compl√®te avec liens et s√©parateurs
 *
 * @see {@link BreadcrumbItem} - Interface structure √©l√©ments navigation
 * @see {@link PageTemplate} - Template utilisant ce breadcrumb via props
 *
 * @since 1.0.0
 * @version 1.0.0
 *
 * @example
 * ```tsx
 * // Breadcrumb basique avec navigation
 * <Breadcrumb items={[
 *   { label: "Dashboard", href: "/dashboard" },
 *   { label: "√âv√©nements", href: "/events" },
 *   { label: "Football Masculin" } // Page courante sans href
 * ]} />
 * ```
 *
 * @example
 * ```tsx
 * // Breadcrumb workflow complexe JO
 * <Breadcrumb items={[
 *   { label: "Dashboard", href: "/dashboard" },
 *   { label: "Lieux", href: "/venues" },
 *   { label: "Stade de France", href: "/venues/stade-france" },
 *   { label: "Configuration Capacit√©s" }
 * ]} />
 * ```
 *
 * @example
 * ```tsx
 * // Int√©gration PageTemplate
 * <PageTemplate
 *   title="D√©tail √âv√©nement"
 *   breadcrumbs={[
 *     { label: "Dashboard", href: "/dashboard" },
 *     { label: "√âv√©nements", href: "/events" },
 *     { label: "Natation", href: "/events/natation" },
 *     { label: "100m Libre Hommes" }
 *   ]}
 * >
 *   <EventDetail />
 * </PageTemplate>
 * ```
 */

'use client';

import Link from 'next/link';

/**
 * Interface pour les √©l√©ments de navigation breadcrumb
 */
interface BreadcrumbItem {
  /** Texte affich√© pour cet √©l√©ment de navigation */
  label: string;
  /** URL optionnelle pour navigation cliquable - si omise, √©l√©ment affich√© comme page courante */
  href?: string;
}

/**
 * Interface des propri√©t√©s du composant Breadcrumb
 */
interface BreadcrumbProps {
  /** Array des √©l√©ments de navigation hi√©rarchique du plus g√©n√©ral au plus sp√©cifique */
  items: BreadcrumbItem[];
}

/**
 * Composant Breadcrumb - Navigation fil d'Ariane r√©utilisable
 *
 * @param props - Les propri√©t√©s du composant
 * @returns JSX.Element - Le breadcrumb de navigation
 */
export default function Breadcrumb({ items }: BreadcrumbProps) {
  return (
    <nav className="mb-8">
      <div className="flex items-center space-x-2 text-sm text-gray-600">
        {items.map((item, index) => (
          <div key={index} className="flex items-center space-x-2">
            {index > 0 && <span>‚Üí</span>}
            {item.href ? (
              <Link href={item.href} className="hover:text-blue-600">
                {item.label}
              </Link>
            ) : (
              <span className="text-gray-900 font-medium">{item.label}</span>
            )}
          </div>
        ))}
      </div>
    </nav>
  );
}
