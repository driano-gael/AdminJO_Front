/**
 * Composant AppHeader - En-t√™te navigation principal AdminJO
 *
 * Ce composant en-t√™te universel constitue la barre de navigation principale de l'application
 * AdminJO des Jeux Olympiques 2024. Il fournit une interface de navigation coh√©rente pour
 * toutes les pages prot√©g√©es avec titre dynamique, navigation contextuelle, informations
 * utilisateur connect√©, et action de d√©connexion s√©curis√©e. Con√ßu pour l'√©cosyst√®me
 * administratif olympique, il int√®gre composants de navigation sp√©cialis√©s, gestion
 * intelligente des liens retour, affichage identit√© utilisateur, et bouton d√©connexion
 * avec states interactifs pour une exp√©rience navigation premium des √©quipes JO 2024.
 *
 * ## Architecture navigation et layout header
 *
 * ### üèóÔ∏è Structure layout trois zones √©quilibr√©es
 * - **Zone gauche** : Navigation retour contextuelle (BackToDashboardButton ou Link)
 * - **Zone centre** : Titre page dynamique avec typography imposante
 * - **Zone droite** : Informations utilisateur + bouton d√©connexion
 * - **Layout absolu** : Positioning absolute pour zones gauche/droite
 * - **Centrage parfait** : mx-auto pour titre centr√© ind√©pendamment contenu lat√©ral
 * - **Responsive design** : Adaptation automatique toutes largeurs √©cran
 * - **Z-index coh√©rent** : shadow-md √©l√©vation sans conflits superposition
 *
 * ### üß≠ Navigation contextuelle intelligente
 * - **BackToDashboardButton** : Composant sp√©cialis√© si backUrl === '/dashboard'
 * - **Link personnalis√©** : Next.js Link si backUrl diff√©rent du dashboard
 * - **Detection automatique** : shouldUseBackToDashboardButton logic intelligente
 * - **Fallback labels** : backLabel par d√©faut "‚¨ÖÔ∏è Accueil" si non fourni
 * - **Conditional rendering** : showBackToDashboard prop pour masquer navigation
 * - **Props flexibility** : backUrl et backLabel configurables par parent
 * - **Consistent styling** : Styles harmonis√©s entre BackToDashboardButton et Link
 *
 * ### üë§ Zone utilisateur et authentification
 * - **Email display** : Affichage user.email depuis AuthContext
 * - **Strong emphasis** : <strong> tag pour mise en valeur identit√©
 * - **Logout action** : Bouton d√©connexion avec callback logout()
 * - **Secure styling** : bg-red-600 couleur danger pour action d√©connexion
 * - **Interactive states** : hover:bg-red-700 feedback visuel
 * - **Transition smooth** : transition-colors animation fluide
 * - **Positioning absolute** : right-0 pr-4 alignement droite coh√©rent
 *
 * ## Gestion d'√©tat et int√©gration authentification
 *
 * ### üîê Int√©gration AuthContext centralis√©e
 * - **useAuth hook** : Acc√®s user et logout depuis contexte global
 * - **User data** : Affichage user.email avec fallback s√©curis√©
 * - **Logout function** : D√©connexion s√©curis√©e via contexte
 * - **State synchronization** : R√©activit√© automatique changements auth
 * - **Session management** : Gestion tokens via AuthContext transparent
 * - **Security consistency** : Coh√©rence √©tat auth dans toute application
 * - **Error handling** : Gestion erreurs auth d√©l√©gu√©e au contexte
 *
 * ### üì° Props configuration et flexibilit√©
 * - **title** : string requis pour identification page courante
 * - **backUrl** : string optionnel pour navigation retour personnalis√©e
 * - **backLabel** : string optionnel pour texte bouton retour
 * - **showBackToDashboard** : boolean optionnel pour masquer navigation retour
 * - **Default values** : Valeurs par d√©faut sens√©es pour usage simplifi√©
 * - **Type safety** : Interface AppHeaderProps stricte TypeScript
 * - **Backward compatibility** : Props optionnelles pour flexibilit√© maximale
 *
 * ## Design system et exp√©rience visuelle
 *
 * ### üé® Design coh√©rent AdminJO olympique
 * - **Background header** : bg-white couleur syst√®me coh√©rente
 * - **Shadow elevation** : shadow-md pour d√©tachement visuel contenu
 * - **Typography hierarchy** : text-3xl font-bold pour titre principal
 * - **Color system** : text-gray-900/600 respectant palette AdminJO
 * - **Padding vertical** : py-6 respiration g√©n√©reuse header
 * - **Spacing horizontal** : pl-4/pr-4 marges lat√©rales √©quilibr√©es
 * - **Interactive colors** : text-blue-600 hover:blue-800 pour liens
 *
 * ### üì± Responsive design et adaptabilit√©
 * - **Mobile adaptation** : Layout flexible s'adapte √©crans √©troits
 * - **Touch targets** : Boutons px-4 py-2 dimensionn√©s interaction tactile
 * - **Text scaling** : Typography responsive avec text-3xl/text-sm
 * - **Absolute positioning** : Maintien layout trois zones sur mobile
 * - **Content overflow** : Titre tronqu√© si n√©cessaire √©crans tr√®s √©troits
 * - **Navigation priority** : D√©connexion et navigation restent accessibles
 * - **Breakpoint harmony** : Coh√©rence avec responsive design system
 *
 * ## Performance et optimisations
 *
 * ### ‚ö° Optimisations actuelles
 * - **Client component** : 'use client' pour hooks authentification n√©cessaires
 * - **Conditional logic** : shouldUseBackToDashboardButton calculated once
 * - **Static styling** : Classes Tailwind pr√©-compil√©es pour performance
 * - **Minimal re-renders** : useAuth deps stables √©vitent re-renders inutiles
 * - **Component reuse** : BackToDashboardButton r√©utilis√© vs duplication code
 * - **Props drilling minimal** : Interface simple sans over-engineering
 * - **Memory efficient** : Pas de state local ou subscriptions lourdes
 *
 * ### üéØ Candidats optimisation avanc√©e
 * - **React.memo** : M√©morisation si title change fr√©quemment
 * - **useCallback** : M√©morisation logout handler si pass√© en prop
 * - **Lazy imports** : Import dynamique BackToDashboardButton si lourd
 * - **Bundle optimization** : Tree shaking composants navigation non utilis√©s
 * - **CSS optimization** : Classes Tailwind unused purging
 * - **Image optimization** : Optimisation logos/avatars si ajout√©s
 *
 * ## Accessibilit√© et standards navigation
 *
 * ### ‚ôø Conformit√© accessibilit√© native
 * - **Semantic header** : <header> tag pour structure s√©mantique
 * - **Heading hierarchy** : h1 titre principal pour screen readers
 * - **Navigation landmarks** : Structure navigation accessible
 * - **Button semantics** : <button> natif pour action d√©connexion
 * - **Link semantics** : Next.js Link pour navigation SEO-friendly
 * - **Focus management** : Tab navigation logique gauche-droite
 * - **Color contrast** : Couleurs respectant ratios WCAG AA
 *
 * ### üîß Am√©liorations accessibilit√© possibles
 * - **Skip links** : Navigation rapide contenu principal
 * - **ARIA labels** : Labels contextuels pour boutons/liens
 * - **Keyboard shortcuts** : Raccourcis navigation (Alt+H home, etc.)
 * - **Screen reader** : Annonces contextuelles changements page
 * - **Focus indicators** : Focus rings visibles navigation clavier
 * - **High contrast** : Support modes contraste √©lev√©
 * - **Reduced motion** : Respect prefers-reduced-motion animations
 *
 * ## Int√©gration √©cosyst√®me navigation AdminJO
 *
 * ### üîå Composants navigation int√©gr√©s
 * - **BackToDashboardButton** : Composant sp√©cialis√© retour dashboard
 * - **Next.js Link** : Navigation performante avec prefetching
 * - **AuthContext integration** : √âtat authentification centralis√©
 * - **Layout systems** : Utilis√© par AuthenticatedLayout et PageTemplate
 * - **Shared components** : Pattern r√©utilisable navigation retour
 * - **Design tokens** : Classes coh√©rentes design system AdminJO
 *
 * ### üîÑ Workflow navigation typique
 * 1. **Page load** : AuthenticatedLayout/PageTemplate renderise AppHeader
 * 2. **Props injection** : title, backUrl, backLabel pass√©s par layout parent
 * 3. **Auth display** : useAuth r√©cup√®re user.email pour affichage
 * 4. **Navigation setup** : Logic d√©termine BackToDashboardButton vs Link
 * 5. **Interactive ready** : Boutons navigation et d√©connexion actifs
 * 6. **User actions** : Navigation retour ou d√©connexion disponibles
 * 7. **State updates** : AuthContext g√®re changements √©tat global
 *
 * ## Contexte m√©tier administration olympique
 *
 * ### üèÖ Sp√©cificit√©s navigation JO 2024
 * - **Dashboard central** : Hub principal organisateurs JO 2024
 * - **Navigation hi√©rarchique** : Retour dashboard depuis sous-modules
 * - **Identity management** : Affichage email administrateur connect√©
 * - **Security logout** : D√©connexion s√©curis√©e syst√®mes critiques
 * - **Professional UI** : Interface coh√©rente √©quipes organisatrices
 * - **Operational efficiency** : Navigation rapide pendant √©v√©nements
 * - **Audit compliance** : Tra√ßabilit√© actions via identit√© utilisateur
 *
 * ### üìä Types pages utilisant AppHeader
 * - **Dashboard principal** : Vue synth√©tique activit√©s administrateur
 * - **Gestion √©v√©nements** : CRUD √©v√©nements sportifs olympiques
 * - **Administration lieux** : Gestion infrastructure olympique
 * - **Gestion disciplines** : Configuration sports et √©preuves
 * - **R√©sultats temps r√©el** : Interfaces saisie r√©sultats comp√©titions
 * - **Coordination m√©dias** : Gestion contenus communications
 * - **Logistique JO** : Coordination op√©rationnelle √©v√©nements
 *
 * ## Patterns d√©veloppement et extensibilit√©
 *
 * ### üèóÔ∏è Architecture patterns appliqu√©s
 * - **Component composition** : Int√©gration BackToDashboardButton harmonieuse
 * - **Props drilling contr√¥l√©** : Interface minimale mais compl√®te
 * - **Conditional rendering** : Logic navigation adaptative
 * - **Context integration** : useAuth pour √©tat authentification global
 * - **Layout responsibility** : Focus navigation, d√©l√©gation authentification
 * - **Responsive by design** : Adaptation √©crans int√©gr√©e architecture
 *
 * ### üîß Extensibilit√© futures possibles
 * - **Avatar support** : Props avatar pour photo profil utilisateur
 * - **Notifications badge** : Indicateurs notifications non-lues
 * - **Theme switcher** : Toggle th√®me sombre/clair
 * - **Language selector** : S√©lection langue pour √©v√©nements internationaux
 * - **Search integration** : Barre recherche globale dans header
 * - **Breadcrumb integration** : Support breadcrumb avanc√©
 * - **Menu dropdown** : Menu utilisateur avec param√®tres/profil
 *
 * ## Limitations et am√©liorations futures
 *
 * ### ‚ùå Limitations actuelles identifi√©es
 * - **Fixed layout** : Structure trois zones non configurable
 * - **Basic user info** : Seulement email affich√©, pas photo/nom
 * - **No notifications** : Pas d'indicateurs notifications
 * - **Single logout** : Pas d'options d√©connexion avanc√©es
 * - **No search** : Pas de recherche globale int√©gr√©e
 * - **Static branding** : Pas de logo/branding JO visible
 * - **No help** : Pas de liens aide/documentation
 *
 * ### üöÄ Am√©liorations prioritaires futures
 * - **User avatar** : Photo profil avec fallback initiales
 * - **Notification system** : Badge notifications avec dropdown
 * - **Branding elements** : Logo JO 2024 et identit√© visuelle
 * - **Search functionality** : Recherche globale avec suggestions
 * - **Settings menu** : Menu utilisateur avec param√®tres compte
 * - **Help integration** : Liens aide contextuelle et documentation
 * - **Performance metrics** : Monitoring temps navigation
 * - **A11y enhancements** : Am√©liorations accessibilit√© avanc√©es
 * - **Theme support** : Syst√®me th√®mes adaptatifs
 * - **Mobile optimization** : Optimisations sp√©cifiques mobile
 *
 * ### üîß Am√©liorations techniques avanc√©es
 * - **Server components** : Migration React Server Components si possible
 * - **Edge optimization** : Optimisations edge computing header
 * - **Bundle splitting** : Code splitting navigation components
 * - **Performance budgets** : Monitoring impact performance header
 * - **Real-time features** : WebSocket notifications temps r√©el
 * - **PWA integration** : Support Progressive Web App
 * - **Analytics integration** : Tracking patterns navigation utilisateur
 * - **Security enhancements** : Headers s√©curit√© avanc√©s
 *
 * @param {AppHeaderProps} props - Configuration du header navigation
 * @param {string} props.title - Titre de la page affich√© au centre
 * @param {string} [props.backUrl="/dashboard"] - URL navigation retour
 * @param {string} [props.backLabel="‚¨ÖÔ∏è Accueil"] - Texte bouton retour
 * @param {boolean} [props.showBackToDashboard=true] - Afficher navigation retour
 *
 * @returns {JSX.Element} Header navigation complet avec titre et contr√¥les
 *
 * @see {@link BackToDashboardButton} - Composant navigation dashboard sp√©cialis√©
 * @see {@link useAuth} - Hook authentification pour user et logout
 * @see {@link AuthenticatedLayout} - Layout utilisant ce header
 * @see {@link PageTemplate} - Template utilisant ce header via layout
 *
 * @since 1.0.0
 * @version 1.0.0
 *
 * @example
 * ```tsx
 * // Header basique avec titre seulement
 * <AppHeader title="Gestion √âv√©nements" />
 * ```
 *
 * @example
 * ```tsx
 * // Header avec navigation retour personnalis√©e
 * <AppHeader
 *   title="D√©tail √âv√©nement"
 *   backUrl="/events"
 *   backLabel="‚Üê Retour √âv√©nements"
 * />
 * ```
 *
 * @example
 * ```tsx
 * // Header sans navigation retour
 * <AppHeader
 *   title="Dashboard Principal"
 *   showBackToDashboard={false}
 * />
 * ```
 */

'use client';

import Link from 'next/link';
import { useAuth } from '@/contexts/authContext';
import BackToDashboardButton from '../shared/BackToDashboardButton';

/**
 * Interface des propri√©t√©s du composant AppHeader
 */
interface AppHeaderProps {
  /** Titre de la page affich√© au centre du header */
  title: string;
  /** URL de navigation retour (par d√©faut: /dashboard) */
  backUrl?: string;
  /** Texte du bouton de navigation retour (par d√©faut: ‚¨ÖÔ∏è Accueil) */
  backLabel?: string;
  /** Afficher le bouton de retour dashboard (par d√©faut: true) */
  showBackToDashboard?: boolean;
}

/**
 * Composant AppHeader - Header r√©utilisable pour toutes les pages
 * 
 * @param props - Les propri√©t√©s du composant
 * @returns JSX.Element - Le header de l'application
 */
export default function AppHeader({ 
  title, 
  backUrl = '/dashboard', 
  backLabel = '‚¨ÖÔ∏è Accueil',
  showBackToDashboard = true 
}: AppHeaderProps) {
  const { user, logout } = useAuth();

  // D√©termine si on utilise le composant BackToDashboardButton ou un Link personnalis√©
  const shouldUseBackToDashboardButton = showBackToDashboard && (backUrl === '/dashboard' || !backUrl);

  return (
        <header className="bg-white shadow-md">
            <div className="">
                <div className="flex items-center py-6 relative">
                    {showBackToDashboard && (
                        <div className="absolute left-0 pl-4">
                            {shouldUseBackToDashboardButton ? (
                                <BackToDashboardButton 
                                  text={backLabel}
                                />
                            ) : (
                                <Link 
                                    href={backUrl}
                                    className="text-blue-600 hover:text-blue-800 font-medium"
                                >
                                    {backLabel || 'Retour'}
                                </Link>
                            )}
                        </div>
                    )}

                    <h1 className="mx-auto text-3xl font-bold text-gray-900">
                        {title}
                    </h1>
                    
                    <div className="absolute right-0 pr-4 flex items-center space-x-4">
                        <span className="text-sm text-gray-600">
                            <strong>{user?.email}</strong>
                        </span>
                        <button
                            onClick={logout}
                            className="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors"
                        >
                            D√©connexion
                        </button>
                    </div>
                </div>
            </div>
        </header>
  );
}
